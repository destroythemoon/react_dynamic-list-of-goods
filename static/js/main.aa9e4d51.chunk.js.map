{"version":3,"sources":["List.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["List","goods","map","good","style","color","className","name","id","getAll","a","fetch","then","response","ok","Error","status","statusText","json","getRedGoods","filter","g","get5First","sort","b","localeCompare","slice","App","state","goodsList","loading","error","loadGoods","goodsFromServer","setState","this","type","onClick","height","width","Component","ReactDOM","render","document","getElementById"],"mappings":"0QAMaA,EAAwB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtC,OACE,mCACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEEC,MAAO,CAAEC,MAAOF,EAAKE,OACrBC,UAAU,YAHZ,SAKGH,EAAKI,MAJDJ,EAAKK,UCTPC,G,MAAM,uCAAG,sBAAAC,EAAA,+EACbC,MAHO,yEAIXC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,mBAAkCH,EAASI,aAGnD,OAAOJ,EAASK,WAPA,2CAAH,sDAWNC,EAAc,WACzB,OAAOV,IAASG,MAAK,SAAAX,GAAK,OAAIA,EAAMmB,QAAO,SAAAC,GAAC,MAAgB,QAAZA,EAAEhB,aAGvCiB,EAAY,WACvB,OAAOb,IACJG,MAAK,SAAAX,GAGJ,OAFAA,EAAMsB,MAAK,SAACb,EAAGc,GAAJ,OAAUd,EAAEH,KAAKkB,cAAcD,EAAEjB,SAErCN,EAAMyB,MAAM,EAAG,OCTtBC,G,kNACJC,MAAe,CACbC,UAAW,GACXC,SAAS,EACTC,OAAO,G,EAGTC,U,uCAAY,WAAOC,GAAP,eAAAvB,EAAA,6DACV,EAAKwB,SAAS,CAAEH,OAAO,EAAOD,SAAS,IAD7B,kBAGYG,IAHZ,OAGFhC,EAHE,OAKR,EAAKiC,SAAS,CAAEL,UAAW5B,EAAO8B,OAAO,EAAOD,SAAS,IALjD,gDAOR,EAAKI,SAAS,CAAEH,OAAO,EAAMD,SAAS,IAP9B,yD,kGAWZ,WAAU,IAAD,OACP,EAEIK,KAAKP,MADPC,EADF,EACEA,UAAWE,EADb,EACaA,MAAOD,EADpB,EACoBA,QAGpB,OACE,sBAAKxB,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,mBACA,sBAAKA,UAAU,eAAf,UACE,wBACE8B,KAAK,SACL9B,UAAU,cACV+B,QAAS,kBAAM,EAAKL,UAAUvB,IAHhC,2BAOA,wBACE2B,KAAK,SACL9B,UAAU,cACV+B,QAAS,kBAAM,EAAKL,UAAUV,IAHhC,yBAOA,wBACEc,KAAK,SACL9B,UAAU,cACV+B,QAAS,kBAAM,EAAKL,UAAUb,IAHhC,6BAQF,qBAAIb,UAAU,YAAd,UACGyB,GACC,qBAAKzB,UAAU,eAAf,8CAIAyB,IAAUD,EAAU,cAAC,IAAD,CAAMzB,MAAM,UAAUiC,OAAQ,GAAIC,MAAO,KAAS,cAAC,EAAD,CAAMtC,MAAO4B,e,GAvD7EW,cA8DHb,ICxEfc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aa9e4d51.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  goods: Good[];\n}\n\nexport const List: React.FC<Props> = ({ goods }) => {\n  return (\n    <>\n      {goods.map(good => (\n        <li\n          key={good.id}\n          style={{ color: good.color }}\n          className=\"App__item\"\n        >\n          {good.name}\n        </li>\n      ))}\n    </>\n  );\n};\n","const API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\nexport const getAll = async (): Promise<Good[]> => {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} â€“ ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const getRedGoods = () => {\n  return getAll().then(goods => goods.filter(g => g.color === 'red'));\n};\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => {\n      goods.sort((a, b) => a.name.localeCompare(b.name));\n\n      return goods.slice(0, 5);\n    });\n};\n","import { Component } from 'react';\nimport { Oval } from 'react-loader-spinner';\nimport { List } from './List';\nimport './App.scss';\nimport { get5First, getAll, getRedGoods } from './api/goods';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\ninterface State {\n  goodsList: Good[];\n  loading: boolean;\n  error: boolean;\n}\n\nclass App extends Component<{}, State> {\n  state: State = {\n    goodsList: [],\n    loading: false,\n    error: false,\n  };\n\n  loadGoods = async (goodsFromServer: () => Promise<Good[]>) => {\n    this.setState({ error: false, loading: true });\n    try {\n      const goods = await goodsFromServer();\n\n      this.setState({ goodsList: goods, error: false, loading: false });\n    } catch {\n      this.setState({ error: true, loading: false });\n    }\n  };\n\n  render() {\n    const {\n      goodsList, error, loading,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">Goods</h1>\n        <div className=\"App__buttons\">\n          <button\n            type=\"button\"\n            className=\"App__button\"\n            onClick={() => this.loadGoods(getAll)}\n          >\n            Get all Goods\n          </button>\n          <button\n            type=\"button\"\n            className=\"App__button\"\n            onClick={() => this.loadGoods(get5First)}\n          >\n            Get First 5\n          </button>\n          <button\n            type=\"button\"\n            className=\"App__button\"\n            onClick={() => this.loadGoods(getRedGoods)}\n          >\n            Get only Red\n          </button>\n        </div>\n        <ul className=\"App__list\">\n          {error && (\n            <div className=\"notification\">\n              Something went wrong. Try again\n            </div>\n          )}\n          {!error && (loading ? <Oval color=\"#ff6600\" height={80} width={80} /> : <List goods={goodsList} />)}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}